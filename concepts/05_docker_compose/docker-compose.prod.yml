# File Location: concepts/05_docker_compose/docker-compose.prod.yml
# Production configuration

version: "3.8"

services:
  web:
    image: myapp:${VERSION:-latest}
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SESSION_SECRET=${SESSION_SECRET}
    networks:
      - app-network
    secrets:
      - db_password
      - session_secret
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  database:
    image: postgres:13-alpine
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == database
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    secrets:
      - db_password
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host

  redis:
    image: redis:6-alpine
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 128M
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-config:/etc/nginx/conf.d:ro
      - ssl-certs:/etc/nginx/ssl:ro
      - static-files:/var/www/html:ro
    networks:
      - app-network
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  nginx-config:
    driver: local
  ssl-certs:
    driver: local
  static-files:
    driver: local

networks:
  app-network:
    driver: overlay
    attachable: true
    encrypted: true

secrets:
  db_password:
    external: true
  session_secret:
    external: true

configs:
  nginx_config:
    external: true
