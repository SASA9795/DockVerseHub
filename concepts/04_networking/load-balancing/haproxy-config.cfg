# File Location: concepts/04_networking/load-balancing/haproxy-config.cfg

global
    daemon
    maxconn 4096
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

# Statistics page
stats enable
stats uri /haproxy-stats
stats realm HAProxy\ Statistics
stats auth admin:admin
stats refresh 30s

# Frontend - receives requests
frontend web_frontend
    bind *:80
    bind *:443 ssl crt /etc/haproxy/ssl/
    redirect scheme https if !{ ssl_fc }
    
    # ACLs for routing
    acl is_api path_beg /api/
    acl is_admin path_beg /admin/
    acl is_websocket hdr(upgrade) -i websocket
    
    # Route to backends
    use_backend api_backend if is_api
    use_backend admin_backend if is_admin
    use_backend websocket_backend if is_websocket
    default_backend web_backend

# Backend - web servers
backend web_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server web1 web1:80 check
    server web2 web2:80 check
    server web3 web3:80 check

# Backend - API servers
backend api_backend
    balance leastconn
    option httpchk GET /api/health
    http-check expect status 200
    
    server api1 api1:3000 check
    server api2 api2:3000 check

# Backend - Admin servers
backend admin_backend
    balance source
    option httpchk GET /admin/health
    http-check expect status 200
    
    server admin1 admin1:8080 check backup

# Backend - WebSocket servers
backend websocket_backend
    balance source
    option httpchk GET /ws/health
    
    server ws1 ws1:8080 check
    server ws2 ws2:8080 check

# Health check endpoints
listen health_check
    bind *:8404
    stats enable
    stats uri /
    stats refresh 30s
    stats admin if TRUE