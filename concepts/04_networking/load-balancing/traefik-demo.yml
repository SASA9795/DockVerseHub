# File Location: concepts/04_networking/load-balancing/traefik-demo.yml

version: "3.8"

services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=admin@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/letsencrypt
    networks:
      - traefik-network

  # Multiple instances of web service for load balancing
  web:
    image: nginx:alpine
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`app.localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=80"
      # Load balancing configuration
      - "traefik.http.services.web.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.web.loadbalancer.healthcheck.path=/health"
    deploy:
      replicas: 3
    volumes:
      - ./web-content:/usr/share/nginx/html:ro
    networks:
      - traefik-network
    command: |
      sh -c '
        echo "<h1>Web Server</h1><p>Container: $$(hostname)</p><p>Time: $$(date)</p>" > /usr/share/nginx/html/index.html
        echo "OK" > /usr/share/nginx/html/health
        nginx -g "daemon off;"
      '

  api:
    image: node:alpine
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      # Rate limiting
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=10"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=5"
      - "traefik.http.routers.api.middlewares=api-ratelimit"
    networks:
      - traefik-network
    command: |
      sh -c '
        cat > server.js << EOF
        const express = require("express");
        const app = express();
        
        app.get("/", (req, res) => {
          res.json({
            message: "API Server",
            container: process.env.HOSTNAME,
            timestamp: new Date().toISOString()
          });
        });
        
        app.get("/health", (req, res) => {
          res.json({ status: "healthy" });
        });
        
        app.listen(3000, () => {
          console.log("API server running on port 3000");
        });
        EOF
        npm install express
        node server.js
      '

volumes:
  traefik-data:

networks:
  traefik-network:
    driver: bridge
