# File Location: concepts/04_networking/docker-compose.yml
# Two-container custom bridge example

version: "3.8"

services:
  # Web application
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: web-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_HOST=database
      - DB_PORT=5432
    networks:
      - custom-network
    depends_on:
      - database
    restart: unless-stopped

  # Database
  database:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: database
    environment:
      POSTGRES_DB: networkdemo
      POSTGRES_USER: demouser
      POSTGRES_PASSWORD: demopass
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - custom-network
    restart: unless-stopped
    # No port mapping - only accessible within network

  # Network testing utility
  network-tester:
    image: alpine:latest
    container_name: network-tester
    command: |
      sh -c '
        apk add --no-cache curl bind-tools iputils
        while true; do
          echo "=== Network Test $(date) ==="
          echo "Testing DNS resolution:"
          nslookup web || echo "DNS lookup failed"
          nslookup database || echo "DNS lookup failed"
          echo "Testing connectivity:"
          ping -c 1 web || echo "Ping to web failed"
          ping -c 1 database || echo "Ping to database failed"
          echo "Testing HTTP connectivity:"
          curl -s http://web:5000/health || echo "HTTP request failed"
          echo "Sleeping for 30 seconds..."
          sleep 30
        done
      '
    networks:
      - custom-network
    depends_on:
      - web
      - database

  # Load balancer (nginx)
  loadbalancer:
    image: nginx:alpine
    container_name: load-balancer
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - custom-network
      - external-network
    depends_on:
      - web

  # Second web instance for load balancing demo
  web2:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: web-app-2
    environment:
      - FLASK_ENV=development
      - DB_HOST=database
      - DB_PORT=5432
    networks:
      - custom-network
    depends_on:
      - database

volumes:
  db-data:
    driver: local

networks:
  # Custom bridge network with specific subnet
  custom-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: demo-bridge

  # External network for load balancer
  external-network:
    driver: bridge
# Network testing commands:
#
# View networks:
# docker network ls
#
# Inspect custom network:
# docker network inspect networking_custom-network
#
# Test container connectivity:
# docker exec network-tester ping web
# docker exec network-tester nslookup database
#
# Check network from web container:
# docker exec web-app curl http://database:5432
#
# Monitor network traffic:
# docker exec web-app netstat -tuln
#
# Test load balancer:
# curl http://localhost/
#
# View container IPs:
# docker inspect web-app | grep IPAddress
