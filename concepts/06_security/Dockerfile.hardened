# File Location: concepts/06_security/Dockerfile.hardened
# Security-hardened container

# Use distroless base for minimal attack surface
FROM python:3.9-slim AS builder

# Install security updates and build dependencies
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
    gcc \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Copy and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy application code
COPY src/ ./src/
COPY app.py .

# Production stage - distroless
FROM gcr.io/distroless/python3-debian11:latest

# Copy Python packages from builder
COPY --from=builder /root/.local /home/nonroot/.local

# Copy application
COPY --from=builder /app /app

# Set working directory
WORKDIR /app

# Security configurations
# - Run as non-root user (distroless default)
# - Read-only root filesystem
# - Drop all capabilities
# - No new privileges
# - Use security profiles

# Set PATH for user packages
ENV PATH=/home/nonroot/.local/bin:$PATH
ENV PYTHONPATH=/app

# Health check (minimal)
HEALTHCHECK --interval=30s --timeout=3s --retries=3 \
    CMD ["python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]

# Expose port
EXPOSE 8000

# Run as non-root user (automatic in distroless)
USER nonroot

# Start application
CMD ["python", "app.py"]

# Runtime security options to use with docker run:
# docker run -d \
#   --read-only \
#   --tmpfs /tmp:noexec,nosuid,nodev \
#   --cap-drop ALL \
#   --cap-add NET_BIND_SERVICE \
#   --security-opt no-new-privileges:true \
#   --security-opt seccomp=seccomp-profile.json \
#   --security-opt apparmor=docker-hardened \
#   --memory 512m \
#   --cpus 0.5 \
#   hardened-app